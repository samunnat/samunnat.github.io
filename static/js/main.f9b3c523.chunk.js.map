{"version":3,"sources":["components/InfoLinks.js","components/utils/TextScramble.js","components/IntroHeader.js","components/Home.js","components/Projects.js","components/Contact.js","components/TabPages.js","App.js","index.js"],"names":["InfoLinks","Container","id","Button","Group","compact","color","style","display","className","icon","name","size","href","rel","target","TextScramble","el","this","chars","update","bind","newText","oldText","innerText","length","Math","max","promise","Promise","resolve","queue","i","from","to","start","floor","random","end","push","cancelAnimationFrame","frameRequest","frame","output","complete","n","char","randomChar","innerHTML","requestAnimationFrame","IntroHeader","document","querySelector","textContent","setText","animateName","backg","Segment","textAlign","backgroundImage","process","Image","src","alt","bordered","Header","as","onClick","React","Component","Hobbies","List","verticalAlign","centered","celled","relaxed","horizontal","inverted","Item","Icon","Content","Description","Home","padding","projectCards","header","content","meta","description","backgroundColor","extra","Projects","Card","items","itemsPerRow","doubling","userId","Contact","props","handleChange","param","e","setState","value","emailjs","init","state","email","subject","message","preventDefault","template_params","from_name","to_name","message_html","send","Grid","padded","Row","Form","widths","Field","label","placeholder","control","Input","required","onChange","TextArea","type","sendEmail","TabPages","handleTabChange","activeIndex","activeTab","getCurrentTabIndex","x","panes","findIndex","pane","currentTo","window","location","hash","slice","matchPath","path","menuItem","exact","strict","basename","Tab","menu","fluid","attached","tabular","borderless","onTabChange","NavLink","replace","key","render","Pane","App","Column","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f9b3c523.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Button } from 'semantic-ui-react'\nimport './css/InfoLinks.css'\n\nconst InfoLinks = () => (\n    <Container id=\"infoLinks\">\n        <Button.Group compact color='black' style={{display: 'inline-block'}}>\n            <Button\n                className='linkButton'\n                id='resume'\n                icon={{ name: 'file alternate', color: 'teal', size: 'large'}}\n                href='https://drive.google.com/open?id=1_Mpr3uOrL-YShl1i5Mv7f_KzBsISoF4j'\n                rel='noopener noreferrer'\n                target='_blank'\n            />\n            \n            <Button\n                className='linkButton'\n                id='github grey'\n                icon={{ name: 'github', color: 'grey', size: 'large'}}\n                href='https://github.com/samunnat'\n                rel='noopener noreferrer'\n                target='_blank'\n            />\n            \n            <Button\n                className='linkButton'\n                id='linkedin'\n                icon={{ name: 'linkedin', color: 'blue', size: 'large'}}\n                href='https://www.linkedin.com/in/samunnat'\n                rel='noopener noreferrer'\n                target='_blank'\n            />\n        </Button.Group>\n    </Container>\n)\n\nexport default InfoLinks;","// Written by Justin Windle: https://codepen.io/soulwire/pen/mErPAK\nclass TextScramble {\n    constructor(el) {\n      this.el = el\n      this.chars = '!<>-_\\\\/[]{}—=+*^?#________'\n      this.update = this.update.bind(this)\n    }\n\n    setText(newText) {\n      const oldText = this.el.innerText\n      const length = Math.max(oldText.length, newText.length)\n      const promise = new Promise((resolve) => this.resolve = resolve)\n      this.queue = []\n      for (let i = 0; i < length; i++) {\n        const from = oldText[i] || ''\n        const to = newText[i] || ''\n        const start = Math.floor(Math.random() * 40)\n        const end = start + Math.floor(Math.random() * 40)\n        this.queue.push({ from, to, start, end })\n      }\n      cancelAnimationFrame(this.frameRequest)\n      this.frame = 0\n      this.update()\n      return promise\n    }\n\n    update() {\n      let output = ''\n      let complete = 0\n      for (let i = 0, n = this.queue.length; i < n; i++) {\n        let { from, to, start, end, char } = this.queue[i]\n        if (this.frame >= end) {\n          complete++\n          output += to\n        } else if (this.frame >= start) {\n          if (!char || Math.random() < 0.28) {\n            char = this.randomChar()\n            this.queue[i].char = char\n          }\n          output += `<span class=\"dud\">${char}</span>`\n        } else {\n          output += from\n        }\n      }\n      this.el.innerHTML = output\n      if (complete === this.queue.length) {\n        this.resolve()\n      } else {\n        this.frameRequest = requestAnimationFrame(this.update)\n        this.frame++\n      }\n    }\n\n    randomChar() {\n      return this.chars[Math.floor(Math.random() * this.chars.length)]\n    }\n}\n\nexport default TextScramble;","import React from 'react';\nimport { Segment, Header, Image } from 'semantic-ui-react'\nimport InfoLinks from './InfoLinks'\nimport TextScramble from './utils/TextScramble'\nimport './css/Intro.css'\n\nclass IntroHeader extends React.Component {\n  animateName() {\n    const el = document.querySelector('#name')\n    el.textContent = 'Δ'\n    const fx = new TextScramble(el)\n    fx.setText('SAM LAMICHHANE')\n  }\n\n  componentDidMount() {\n    this.animateName()\n  }\n\n  render() {\n    const backg = 'random_grey_variations';\n    return (\n      <Segment id='introHeader' textAlign='center'\n        style={{\n         backgroundImage: `url(${process.env.PUBLIC_URL}/backgrounds/${backg}/${backg}.png)`\n        }}\n      >\n        <Image id='image' src='/avatar.jpg' alt='avatar' className='ui avatar small image' bordered/>\n        <Header as='h1' id='name' textAlign='center' onClick={this.animateName}></Header>\n        <InfoLinks />\n      </Segment>\n    );\n  }\n}\n\nexport default IntroHeader;","import React from 'react';\nimport { Container, Header, List } from 'semantic-ui-react';\nimport './css/Home.css'\n\nconst Home = () => {\n    return (\n        <Container textAlign='center' style={{padding: '10px'}}>\n            <Header size='small' color='olive' inverted>\n                Ahoy-hoy! I'm a senior undergrad at CU Boulder majoring in Computer Science.\n            </Header>\n\n            <Header size='small' color='olive' inverted>\n                I'm interested in Full-Stack Web Development, Big-Data Architecture, and Automation.\n            </Header>\n            \n            <Header size='small' color='olive' inverted>My Hobbies:</Header>\n            <Hobbies/>\n        </Container>\n    );\n}\n\nconst Hobbies = () => {\n    return (\n        <List size='medium' color='olive' verticalAlign='middle' centered='true' celled relaxed horizontal inverted>\n            <List.Item className='hobby'>\n                <List.Icon name='book' color='olive' inverted/>\n                <List.Content>\n                    <List.Header>Reading</List.Header>\n                    <List.Description>Fantasy, Sci-Fi, Tech</List.Description>\n                </List.Content>\n            </List.Item>\n            <List.Item className='hobby'>\n                <List.Icon name='picture' color='olive' inverted/>\n                <List.Content>\n                    <List.Header>Hiking</List.Header>\n                    <List.Description>anywhere with a view</List.Description>\n                </List.Content>\n            </List.Item>\n            <List.Item className='hobby'>\n                <List.Icon name='bicycle' color='olive' inverted/>\n                <List.Content>\n                    <List.Header>Biking</List.Header>\n                    <List.Description>preferably downhill</List.Description>\n                </List.Content>\n            </List.Item>\n        </List>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, Header, Icon } from 'semantic-ui-react';\n\nconst projectCards = [\n    {\n        header: { content: 'Twingua', as: Header },\n        meta: 'Group',\n        description: 'Geovisualization of language distribution across ingested tweets.',\n        style: { backgroundColor: '#e6ffff' },\n        extra: (\n            <div>\n                <a href='https://github.com/CUBigDataClass/Twingua' rel='noopener noreferrer' target='_blank'>\n                    <Icon name='github' color='grey' size='large'/>\n                </a> \n                <a href='https://www.youtube.com/watch?v=uWDh2CGj-ao&feature=youtu.be' rel='noopener noreferrer' target='_blank'>\n                    <Icon name='youtube' color='red' size='large'/>\n                </a> \n            </div>\n        )\n    },\n]\n\nconst Projects = () => {\n    return (\n        <Card.Group items={projectCards} itemsPerRow={3} doubling={true} centered/>\n    );\n}\n\nexport default Projects;","import React from 'react';\nimport emailjs from 'emailjs-com';\nimport { Form, Grid, Header, Input, TextArea } from 'semantic-ui-react';\n\nconst userId = 'user_NXoA8UMWyzrRaVfz6wTdz';\nconst templateId = 'template_s7TrsWtP'\n\nclass Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        emailjs.init(userId);\n\n        this.state = {\n            name: '',\n            email: '',\n            subject: '',\n            message: '',\n        }\n    }\n\n    sendEmail(e) {\n        e.preventDefault();\n\n        const { email, subject, message } = this.state;\n        let template_params = {\n            from_name: email,\n            to_name: 'lamichhaneakash1999@gmail.com',\n            subject: subject,\n            message_html: message,\n        }\n\n        emailjs.send(\n            'gmail',\n            templateId,\n            template_params,\n            userId,\n        )\n\n        this.setState({\n            name: '',\n            email: '',\n            subject: '',\n            message: '',\n        })\n    }\n    \n    handleChange = (param, e) => {\n        this.setState({ [param]: e.target.value })\n    }\n\n    render() {\n        const { name, email, subject, message } = this.state;\n\n        return (\n            <Grid centered padded='horizontally'>\n                <Grid.Row>\n                    <Header size='small' color='orange'>Feel free to ping me at sala6632@colorado.edu.</Header>\n                </Grid.Row>\n                <Grid.Row>\n                    <Form size='medium' widths='equal' inverted>\n                        <Form.Group>\n                            <Form.Field \n                                label='Name' \n                                placeholder='Ed Chambers'\n                                control={Input}\n                                value={name}\n                                required\n                                onChange={this.handleChange.bind(this, 'name')}\n                            />\n                            \n                            <Form.Field \n                                id='form-input-control-error-email'\n                                label='Email' \n                                placeholder='donald.dunn@hooli.xyz'\n                                control={Input}\n                                value={email}\n                                required\n                                onChange={this.handleChange.bind(this, 'email')}\n                            />\n                        </Form.Group>\n                        \n                        <Form.Field\n                            label='Subject' \n                            placeholder='Azure Storage Rates' \n                            control={Input} \n                            value={subject}\n                            required\n                            onChange={this.handleChange.bind(this, 'subject')}\n                        />\n\n                        <Form.Field\n                            label='Message'\n                            control={TextArea} \n                            value={message}\n                            required\n                            onChange={this.handleChange.bind(this, 'message')}\n                        />\n\n                        <Form.Button\n                            content='Submit'\n                            type='submit'\n                            color='orange'\n                            onClick={this.sendEmail.bind(this)}\n                        />\n                    </Form>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, NavLink, matchPath } from 'react-router-dom';\nimport { Tab, Container } from 'semantic-ui-react'\nimport Home from './Home';\nimport Projects from './Projects';\nimport Contact from './Contact';\n\nclass TabPages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: this.getCurrentTabIndex(),\n        }\n    }\n\n    handleTabChange = (e, { activeIndex }) => {\n        this.setState({ activeTab: activeIndex });\n    }\n\n    getCurrentTabIndex() {\n        let x = panes.findIndex(pane => {\n            let currentTo = window.location.hash.slice(1);\n            return !!matchPath(currentTo, {\n                path: pane.menuItem.to,\n                exact: true,\n                strict: false\n            });\n        });\n        return (x === -1) ? 0 : x;\n    }\n\n    render() {\n        return (\n            <Container>\n                <Router basename='/'>\n                    <Tab \n                        activeIndex={this.state.activeTab}\n                        menu={{ \n                            fluid: false,\n                            attached: false,\n                            tabular: false,\n                            size: 'large',\n                            inverted: true,\n                            widths: 3,\n                            borderless: true,\n                            color: 'black',\n                        }} \n                        size='large'\n                        panes={panes}\n                        onTabChange={this.handleTabChange}\n                    />\n                </Router>\n            </Container>\n        );\n    }\n}\n\nconst panes = [\n    { \n        menuItem: { \n            as: NavLink,\n            to: '/',\n            exact: true,\n            replace: true,\n            content: 'Home',\n            key: 'Home', \n            icon: { name: 'hand spock', color: 'olive' }\n        },\n        render: () => (\n            <Route path='/' exact>\n                <Tab.Pane color='black' inverted>\n                    <Home/>\n                </Tab.Pane>\n            </Route>\n        )\n    },\n    { \n        menuItem: { \n            as: NavLink,\n            to: '/projects',\n            replace: true,\n            content: 'Projects',\n            key: 'Projects', \n            icon: { name: 'code branch', color: 'yellow' }\n        },\n        render: () => (\n            <Route path='/projects'>\n                <Tab.Pane color='black' inverted> \n                    <Projects/>\n                </Tab.Pane>\n            </Route>\n        )\n    },\n    { \n        menuItem: {\n            as: NavLink,\n            to: '/contact',\n            replace: true,\n            content: 'Contact',\n            key: 'Contact',\n            icon: { name: 'paper plane', color: 'orange' }\n        },\n        render: () => (\n            <Route path='/contact'>\n                <Tab.Pane color='black' inverted>\n                    <Contact/> \n                </Tab.Pane>\n            </Route>\n        )\n    },\n];\n\nexport default TabPages;\n","import React from 'react';\nimport { Segment, Grid } from 'semantic-ui-react';\nimport IntroHeader from './components/IntroHeader';\nimport TabPages from './components/TabPages';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Segment \n      id=\"App\"\n      style={{backgroundImage: `url(${process.env.PUBLIC_URL}/backgrounds/prism/prism.png)`}}\n    >\n      <Grid id=\"main\">\n        <Grid.Column>\n          <Grid.Row>\n            <IntroHeader />\n          </Grid.Row>\n\n          <Grid.Row>\n            <TabPages />\n          </Grid.Row>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}